const express = require('express');
const app = express();
const path = require('path');
const port = 8000;
const cors = require('cors');

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Servir archivos est치ticos del frontend
app.use(express.static(path.join(__dirname, 'frontend')));

// Importar la configuraci칩n de la base de datos y los modelos
const { sequelize } = require('./server_mysql/models/index');

// Importar rutas
const allRestauranteRoutes = require('./server_mysql/routes/restaurante.routes');
const allTipoComidaRoutes = require('./server_mysql/routes/TipoComida.routes');
const allMenuRoutes = require('./server_mysql/routes/menu.routes');
 
// Usar rutas
allRestauranteRoutes(app);
allTipoComidaRoutes(app);
allMenuRoutes(app);

// Ruta para la p치gina principal
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'frontend', 'index.html'));
});

// Manejo de errores global
app.use((err, req, res, next) => {
    console.error('Error en la aplicaci칩n:', err);
    res.status(500).json({
        status: 'error',
        message: 'Ha ocurrido un error en el servidor',
        error: err.message
    });
});

// Sincronizar base de datos e iniciar servidor
sequelize.sync({ force: false }) // Cambiado a false para no eliminar datos en cada reinicio
    .then(() => {
        console.log('Base de datos sincronizada correctamente');
        app.listen(port, () => {
            console.log(`Servidor corriendo en puerto ${port}`);
            console.log(`Frontend disponible en http://localhost:${port}`);
        });
    })
    .catch(error => {
        console.error('Error al sincronizar la base de datos:', error);
        process.exit(1);
    });
